var AngularForDesigners=angular.module("il.DesignIndependence",[]);AngularForDesigners.directive("afd",function(e){return{restrict:"A",compile:function(r,n){return{pre:function(r,n,t){var i=AngularForDesigners.extractConfiguration(r,n,t);n.attr("field",i.field),n.attr("context",i.context),n.attr("ng-model",i.ngModel),n.removeAttr("afd"),i.directive.preCompiler(n,t,i),e(n)(r)},post:function(e,r,n,t){}}}}}),AngularForDesigners.directive("afdDebug",function(e){return{restrict:"A",compile:function(r,n){return{pre:function(r,n,t){console.debug(r,n,t),n.removeAttr("afd-debug"),e(n)(r)},post:function(e,r,n,t){}}}}});
var AngularForDesigners=angular.module("il.DesignIndependence",[]);AngularForDesigners.directive("afd-context",function(t){return{restrict:"A",compile:function(e,o){return{pre:function(e,o,n){o.attr("ng-controller","afdContextController"),o.attr("context",n["afd-context"]),o.removeAttr("afd-context"),t(o)(e)},post:function(t,e,o,n){}}}}}),AngularForDesigners.controller("afdContextController",function($rootScope,$scope,$timeout,$http,$q,$attrs){this.$rootScope=$rootScope,this.$scope=$scope,this.$timeout=$timeout,this.$http=$http,this.$q=$q,$scope.controller=this,this.$scope=$scope,this.$parentScope=$scope.$parent,$scope.isAfdContextController=!0;var ancestor=AngularForDesigners.getAncestorAfdScope($scope);if(console.debug("*****",$scope),void 0!==$attrs.context?$scope.afdContext=eval($attrs.context):ancestor&&($scope.afdContext=ancestor.afdContext),void 0===$scope.afdContext)throw"afdContextController: context field required because this context controller doesn't have any context controller ancestor"});
var AngularForDesigners=angular.module("il.DesignIndependence",[]);AngularForDesigners.directive("afdRepeat",function(){var getTemplate=function(){return'<div ng-repeat="afdModel in list" afd-transcope></div>'};return{restrict:"A",scope:{},controller:function($scope,$attrs){var field=$attrs.afdRepeat;$scope.list=eval("$scope.$parent.afdModel."+field),$scope.afdModelParent=$scope.$parent.afdModel,$scope.afdData=$scope.$parent.afdData},transclude:!0,template:getTemplate()}}),AngularForDesigners.directive("afdTranscope",function(){return{link:function(e,n,t,a,r){if(!r)throw minErr("ngTransclude")("orphan","Illegal use of ngTransclude directive in the template! No parent directive that requires a transclusion found. Element: {0}",startingTag(n));var o=e.$new();r(o,function(e){n.empty(),n.append(e),n.on("$destroy",function(){o.$destroy()})})}}});
var AngularForDesigners=angular.module("il.DesignIndependence",[]);AngularForDesigners.config={directives:{INPUT:{preCompiler:function(e,l,i){}},SELECT:{defaults:{label:"label",value:"value"},attrRequired:["list"],preCompiler:function(e,l,i){var a=l.label;void 0===a&&(a=this.defaults.label);var r=l.value;void 0===r&&(r=this.defaults.value),e.attr("ng-options","item."+a+" for item in afdData."+l.list+" track by item."+r)}},DEFAULT:{preCompiler:function(e,l,i){e.html("{{"+i.ngModel+"}}")}}}};
var AngularForDesigners=angular.module("il.DesignIndependence",[]);AngularForDesigners.getAttribute=function(e,r){Array.isArray(e)&&(e=e[0]);var i=e.attr(r);return void 0===i?void 0:i},AngularForDesigners.extractConfigurationField=function(e,r,i){var n=AngularForDesigners.getAttribute(r,"field");if(void 0===n){var t=AngularForDesigners.getAttribute(r,"name");n=void 0!==t?t:r[0].textContent}return n},AngularForDesigners.extractConfigurationModel=function(e,r,i){var n=AngularForDesigners.getAttribute(r,"model");return void 0===n&&(n="afdModel"),n},AngularForDesigners.extractConfigurationNgModel=function(e){return e.model+"."+e.field},AngularForDesigners.extractConfiguration=function(e,r,i){var n={};if(n.field=AngularForDesigners.extractConfigurationField(e,r,i),n.model=AngularForDesigners.extractConfigurationModel(e,r,i),n.ngModel=AngularForDesigners.extractConfigurationNgModel(n),n.scope=e,n.iElement=r,n.iAttrs=i,n.elementName=r[0].nodeName,void 0===AngularForDesigners.config.directives[n.elementName]?n.configurationName="DEFAULT":n.configurationName=n.elementName,n.directive=AngularForDesigners.config.directives[n.configurationName],void 0===n.directive.preCompiler)throw"Precompiled configuration required on "+n.elementName;return void 0!==n.directive.attrRequired&&n.directive.attrRequired.forEach(function(e){if(void 0===r.attr(e))throw"Attribute "+e+" is required but don't found on "+n.elementName}),n};
var AngularForDesigners=angular.module("il.DesignIndependence",[]);AngularForDesigners.directive("afdTranslate",function(e){return{restrict:"A",compile:function(n,t){return{pre:function(n,t,r,a){t.removeAttr("afd-translate"),t.html("{{'"+t[0].textContent+"'|translate}}"),e(t)(n)},post:function(e,n,t,r){}}}}});