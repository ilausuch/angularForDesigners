var AngularForDesigners=angular.module("angularForDesigners",[]);AngularForDesigners.directive("afd",function(r){return{restrict:"A",compile:function(e,n){return{pre:function(e,n,t){var o=AngularForDesigners.extractConfiguration(e,n,t);n.attr("field",o.field),n.attr("context",o.context),n.attr("ng-model",o.ngModel),n.removeAttr("afd"),o.directive.preCompiler(n,t,o),r(n)(e)},post:function(r,e,n,t){}}}}}),AngularForDesigners.directive("afdDebug",function(r){return{restrict:"A",compile:function(e,n){return{pre:function(e,n,t){console.debug(e,n,t),n.removeAttr("afd-debug"),r(n)(e)},post:function(r,e,n,t){}}}}});
var AngularForDesigners=angular.module("angularForDesigners",[]);AngularForDesigners.directive("afdRepeat",function(){var getTemplate=function(){return'<div ng-repeat="afdModel in list" afd-transcope></div>'};return{restrict:"A",scope:{},controller:function($scope,$attrs){var field=$attrs.afdRepeat;$scope.list=eval("$scope.$parent.afdModel."+field),$scope.afdModelParent=$scope.$parent.afdModel,$scope.afdData=$scope.$parent.afdData},transclude:!0,template:getTemplate()}}),AngularForDesigners.directive("afdTranscope",function(){return{link:function(e,r,t,a,n){if(!n)throw minErr("ngTransclude")("orphan","Illegal use of ngTransclude directive in the template! No parent directive that requires a transclusion found. Element: {0}",startingTag(r));var o=e.$new();n(o,function(e){r.empty(),r.append(e),r.on("$destroy",function(){o.$destroy()})})}}});
var AngularForDesigners=angular.module("angularForDesigners",[]);AngularForDesigners.config={directives:{INPUT:{preCompiler:function(e,l,a){}},SELECT:{defaults:{label:"label",value:"value"},attrRequired:["list"],preCompiler:function(e,l,a){var r=l.label;void 0===r&&(r=this.defaults.label);var i=l.value;void 0===i&&(i=this.defaults.value),e.attr("ng-options","item."+r+" for item in afdData."+l.list+" track by item."+i)}},DEFAULT:{preCompiler:function(e,l,a){e.html("{{"+a.ngModel+"}}")}}}};
var AngularForDesigners=angular.module("angularForDesigners",[]);AngularForDesigners.configure=function(e){AngularForDesigners.$scope=e},AngularForDesigners.setModel=function(e){AngularForDesigners.$scope.afdModel=e},AngularForDesigners.setData=function(e){AngularForDesigners.$scope.afdData=e},AngularForDesigners.setOperations=function(e){AngularForDesigners.$scope.afdOperations=e},AngularForDesigners.getAttribute=function(e,r){Array.isArray(e)&&(e=e[0]);var n=e.attr(r);return void 0===n?void 0:n},AngularForDesigners.extractConfigurationField=function(e,r,n){var i=AngularForDesigners.getAttribute(r,"field");if(void 0===i){var o=AngularForDesigners.getAttribute(r,"name");i=void 0!==o?o:r[0].textContent}return i},AngularForDesigners.extractConfigurationModel=function(e,r,n){var i=AngularForDesigners.getAttribute(r,"model");return void 0===i&&(i="afdModel"),i},AngularForDesigners.extractConfigurationNgModel=function(e){return e.model+"."+e.field},AngularForDesigners.extractConfiguration=function(e,r,n){var i={};if(i.field=AngularForDesigners.extractConfigurationField(e,r,n),i.model=AngularForDesigners.extractConfigurationModel(e,r,n),i.ngModel=AngularForDesigners.extractConfigurationNgModel(i),i.scope=e,i.iElement=r,i.iAttrs=n,i.elementName=r[0].nodeName,void 0===AngularForDesigners.config.directives[i.elementName]?i.configurationName="DEFAULT":i.configurationName=i.elementName,i.directive=AngularForDesigners.config.directives[i.configurationName],void 0===i.directive.preCompiler)throw"Precompiled configuration required on "+i.elementName;return void 0!==i.directive.attrRequired&&i.directive.attrRequired.forEach(function(e){if(void 0===r.attr(e))throw"Attribute "+e+" is required but don't found on "+i.elementName}),i};
var AngularForDesigners=angular.module("angularForDesigners",[]);AngularForDesigners.directive("afdTranslate",function(r){return{restrict:"A",compile:function(n,t){return{pre:function(n,t,e,a){t.removeAttr("afd-translate"),t.html("{{'"+t[0].textContent+"'|translate}}"),r(t)(n)},post:function(r,n,t,e){}}}}});