var AngularForDesigners=angular.module("angularForDesigners",[]);AngularForDesigners.directive("afd",function(e){return{restrict:"A",compile:function(r,t){return{pre:function(r,t,n){var i=AngularForDesigners.extractConfiguration(r,t,n);t.attr("field",i.field),t.removeAttr("afd"),i.directive.preCompiler(t,n,i),e(t)(r)},post:function(e,r,t,n){}}}}}),AngularForDesigners.directive("afdDebug",function(e){return{restrict:"A",compile:function(r,t){return{pre:function(r,t,n){console.debug(r,t,n),t.removeAttr("afd-debug"),e(t)(r)},post:function(e,r,t,n){}}}}}),AngularForDesigners.directive("afdRepeat",function(){var getTemplate=function(){return'<div ng-repeat="afdModel in list" afd-transcope></div>'};return{restrict:"A",scope:{},controller:function($scope,$attrs){var field=$attrs.afdRepeat;$scope.$parent.$watch("afdModel."+field,function(){try{$scope.list=eval("$scope.$parent.afdModel."+field)}catch(e){$scope.list=[]}}),$scope.afdModelParent=$scope.$parent.afdModel,$scope.afdData=$scope.$parent.afdData},transclude:!0,template:getTemplate()}}),AngularForDesigners.directive("afdTranscope",function(){return{link:function(e,r,t,n,i){if(!i)throw minErr("ngTransclude")("orphan","Illegal use of ngTransclude directive in the template! No parent directive that requires a transclusion found. Element: {0}",startingTag(r));var o=e.$new();i(o,function(e){r.empty(),r.append(e),r.on("$destroy",function(){o.$destroy()})})}}}),AngularForDesigners.directive("afdShow",function(){return{restrict:"A",compile:function(e,r){return{pre:function(e,r,t){var n=AngularForDesigners.extractConfiguration(e,r,t);r.attr("ng-show",n.model+"."+t.afdShow),r.removeAttr("afd-show"),$compile(r)(e)},post:function(e,r,t,n){}}}}}),AngularForDesigners.directive("afdHide",function(){return{restrict:"A",compile:function(e,r){return{pre:function(e,r,t){var n=AngularForDesigners.extractConfiguration(e,r,t);r.attr("ng-hide",n.model+"."+t.afdHide),r.removeAttr("afd-hide"),$compile(r)(e)},post:function(e,r,t,n){}}}}}),AngularForDesigners.config={directives:{INPUT:{preCompiler:function(e,r,t){e.attr("ng-model",t.ngModel)}},SELECT:{defaults:{label:"label",value:"value"},attrRequired:["list"],preCompiler:function(e,r,t){e.attr("ng-model",t.ngModel);var n=r.label;void 0===n&&(n=this.defaults.label);var i=r.value;void 0===i&&(i=this.defaults.value),e.attr("ng-options","item."+n+" for item in afdData."+r.list+" track by item."+i)}},A:{attrRequired:["href"],preCompiler:function(e,r,t){e.attr("href","{{afdModel."+r.href+"}}")}},DEFAULT:{preCompiler:function(e,r,t){e.html("{{"+t.ngModel+"}}")}}}},AngularForDesigners.configure=function(e){AngularForDesigners.$scope=e},AngularForDesigners.setModel=function(e){AngularForDesigners.$scope.afdModel=e},AngularForDesigners.getModel=function(){return AngularForDesigners.$scope.afdModel},AngularForDesigners.setData=function(e){AngularForDesigners.$scope.afdData=e},AngularForDesigners.getData=function(){return AngularForDesigners.$scope.afdData},AngularForDesigners.setOperations=function(e){AngularForDesigners.$scope.afdOperations=e},AngularForDesigners.getAttribute=function(e,r){Array.isArray(e)&&(e=e[0]);var t=e.attr(r);return void 0===t?void 0:t},AngularForDesigners.extractConfigurationField=function(e,r,t){var n=AngularForDesigners.getAttribute(r,"field");if(void 0===n){var i=AngularForDesigners.getAttribute(r,"name");n=void 0!==i?i:r[0].textContent}return n},AngularForDesigners.extractConfigurationModel=function(e,r,t){var n=AngularForDesigners.getAttribute(r,"model");return void 0===n&&(n="afdModel"),n},AngularForDesigners.extractConfigurationNgModel=function(e){return void 0!=e.field?e.model+"."+e.field:""},AngularForDesigners.extractConfiguration=function(e,r,t){var n={};if(n.field=AngularForDesigners.extractConfigurationField(e,r,t),n.model=AngularForDesigners.extractConfigurationModel(e,r,t),n.ngModel=AngularForDesigners.extractConfigurationNgModel(n),n.scope=e,n.iElement=r,n.iAttrs=t,n.elementName=r[0].nodeName,void 0===AngularForDesigners.config.directives[n.elementName]?n.configurationName="DEFAULT":n.configurationName=n.elementName,n.directive=AngularForDesigners.config.directives[n.configurationName],void 0===n.directive.preCompiler)throw"Precompiled configuration required on "+n.elementName;return void 0!==n.directive.attrRequired&&n.directive.attrRequired.forEach(function(e){if(void 0===r.attr(e))throw"Attribute "+e+" is required but don't found on "+n.elementName}),n},AngularForDesigners.directive("afdTranslate",function(e){return{restrict:"A",compile:function(r,t){return{pre:function(r,t,n,i){t.removeAttr("afd-translate"),t.html("{{'"+t[0].textContent+"'|translate}}"),e(t)(r)},post:function(e,r,t,n){}}}}});